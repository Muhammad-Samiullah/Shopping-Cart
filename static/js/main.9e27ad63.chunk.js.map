{"version":3,"sources":["CartItem/CartItem.Styles.ts","CartItem/CartItem.tsx","Cart/Cart.Style.ts","Cart/Cart.tsx","Item/Item.Style.ts","Item/Item.tsx","App.Style.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","CartItem","item","addToCart","removeFromCart","title","className","price","amount","toFixed","Button","size","disableElevation","variant","onClick","id","src","image","alt","aside","Cart","items","cartItems","length","map","reduce","ack","Item","handleAddToCart","description","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9e27ad63.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-bottom: 1px solid lightblue;\r\n    padding-bottom: 20px;\r\n\r\n    div {\r\n        flex: 1;\r\n    }\r\n    \r\n    .information, .buttons {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    img {\r\n        max-width: 80px;\r\n        object-fit: cover;\r\n        margin-left: 40px;\r\n    }\r\n`","import Button from '@material-ui/core/Button'\r\n//Types\r\nimport {CartItemType} from '../App'\r\n//Styles\r\nimport {Wrapper} from './CartItem.Styles'\r\n\r\ntype Props = {\r\n    item: CartItemType;\r\n    addToCart: (clickedItem: CartItemType) => void;\r\n    removeFromCart: (id: number) => void;\r\n}\r\n\r\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart}) => (\r\n    <Wrapper>\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <div className=\"information\">\r\n                <p>Price: ${item.price}</p>\r\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <Button \r\n                    size=\"small\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={() => removeFromCart(item.id)}\r\n                >\r\n                    -\r\n                </Button>\r\n                <p>{item.amount}</p>\r\n                <Button \r\n                    size=\"small\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={() => addToCart(item)}\r\n                >\r\n                    +\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <img src={item.image} alt={item.title} />\r\n    </Wrapper>\r\n)\r\n\r\nexport default CartItem","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.aside`\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    width: 500px;\r\n    padding: 20px;\r\n`","import CartItem from '../CartItem/CartItem'\r\n//Styles\r\nimport {Wrapper} from './Cart.Style'\r\n//Types\r\nimport {CartItemType} from '../App'\r\n\r\ntype Props = {\r\n    cartItems: CartItemType[];\r\n    addToCart: (clickedItem: CartItemType) => void;\r\n    removeFromCart: (id: number) => void;\r\n}\r\n\r\nconst Cart: React.FC<Props> = ({cartItems, addToCart, removeFromCart}) => {\r\n    const calculateTotal = (items: CartItemType[]) => \r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0)\r\n    return(\r\n        <Wrapper>\r\n            <h2>Your Shopping Cart</h2>\r\n            {cartItems.length === 0 ? <p>No items in the cart.</p> : null}\r\n            {cartItems.map(item => (\r\n                <CartItem \r\n                    key={item.id}\r\n                    item={item}\r\n                    addToCart={addToCart}\r\n                    removeFromCart={removeFromCart}\r\n                />\r\n            ))}\r\n            <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    border: 1px solid lightblue;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n\r\n    button {\r\n        border-radius: 0 0 20px 20px;\r\n    }\r\n\r\n    img {\r\n        max-height: 250px;\r\n        object-fit: cover;\r\n        border-radius: 20px 20px 0 0;\r\n    }\r\n\r\n    div {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        padding: 1rem;\r\n        height: 100%\r\n    }\r\n`","import Button from \"@material-ui/core/Button\"\r\n//Types\r\nimport {CartItemType} from \"../App\"\r\n//Styles\r\nimport {Wrapper} from \"./Item.Style\"\r\n\r\ntype Props = {\r\n    item: CartItemType;\r\n    handleAddToCart: (clickedItem: CartItemType) => void;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({item, handleAddToCart}) => (\r\n    <Wrapper>\r\n        <img src={item.image} alt={item.title} />\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <h3>${item.price}</h3>\r\n        </div>\r\n        <Button onClick={() => handleAddToCart(item)}>Add to Cart</Button>\r\n    </Wrapper>\r\n)\r\n\r\nexport default Item","import styled from \"styled-components\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 40px;\r\n`\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n    position: fixed;\r\n    z-index: 100;\r\n    right: 20px;\r\n    top: 20px;\r\n`","import {useState} from \"react\"\nimport {useQuery} from \"react-query\"\n// Components\nimport Cart from './Cart/Cart'\nimport Item from \"./Item/Item\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\nimport Grid from \"@material-ui/core/Grid\"\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\"\nimport Badge from \"@material-ui/core/Badge\"\n//Styles\nimport {Wrapper, StyledButton} from \"./App.Style\"\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => \n  await (await fetch('https://fakestoreapi.com/products')).json()\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false)\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\n  const {data, isLoading, error} = useQuery<CartItemType[]>(\n    'Products',\n    getProducts\n  )\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0)\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      //1.Is the item already added in the cart?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n      if(isItemInCart) {\n        return prev.map(item => (\n          item.id === clickedItem.id ? {...item, amount: item.amount+1} : item\n        )) \n      }\n      //First Time the Item is Added\n      return [...prev, {...clickedItem, amount: 1}]\n    })\n  }\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev => (\n      prev.reduce((ack, item) => {\n        if(item.id === id) {\n          if(item.amount === 1 ) return ack\n          return [...ack, {...item, amount: item.amount - 1}]\n        }\n        else {\n          return [...ack, item]\n        }\n      }, [] as CartItemType[])\n    ))\n  }\n\n  if(isLoading) return <LinearProgress />\n  if(error) return <div>Something Went Wrong...</div>\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)} >\n        <Cart \n          cartItems={cartItems} \n          addToCart={handleAddToCart} \n          removeFromCart={handleRemoveFromCart} \n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {QueryClient, QueryClientProvider} from \"react-query\"\n\nconst client = new QueryClient()\n\nReactDOM.render(\n    <QueryClientProvider client={client}>\n        <App />\n    </QueryClientProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}